{
  "contractName": "EtherSwap",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "refundDelay",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "delay",
          "type": "uint256"
        }
      ],
      "name": "setRefundDelay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "lninvoiceHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "onchainAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "paymentHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "name": "refundBlockHeight",
          "type": "uint256"
        }
      ],
      "name": "OrderFundingReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "lninvoiceHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "lninvoiceHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderRefunded",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "lninvoiceHash",
          "type": "bytes32"
        },
        {
          "name": "paymentHash",
          "type": "bytes32"
        }
      ],
      "name": "fund",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "lninvoiceHash",
          "type": "bytes32"
        },
        {
          "name": "preimage",
          "type": "bytes32"
        }
      ],
      "name": "claim",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "lninvoiceHash",
          "type": "bytes32"
        }
      ],
      "name": "refund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526103c0600155336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c54806100596000396000f300608060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633e602b4c1461007d5780637249fbb6146100a85780637bfa9819146100d957806384cc9dfb146101065780638da5cb5b14610145578063ee2118df1461019c575b600080fd5b34801561008957600080fd5b506100926101ce565b6040518082815260200191505060405180910390f35b3480156100b457600080fd5b506100d760048036038101908080356000191690602001909291905050506101d4565b005b3480156100e557600080fd5b5061010460048036038101908080359060200190929190505050610472565b005b34801561011257600080fd5b50610143600480360381019080803560001916906020019092919080356000191690602001909291905050506105e0565b005b34801561015157600080fd5b5061015a6109d5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101cc600480360381019080803560001916906020019092919080356000191690602001909291905050506109fa565b005b60015481565b60006002600083600019166000191681526020019081526020016000209050600115158160050160019054906101000a900460ff161515141515610280576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f7264657220646f6573206e6f742065786973742e000000000000000000000081525060200191505060405180910390fd5b6000600281111561028d57fe5b8160050160009054906101000a900460ff1660028111156102aa57fe5b14151561031f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4f726465722063616e6e6f7420626520726566756e6465642e0000000000000081525060200191505060405180910390fd5b80600401544311151561039a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f546f6f206561726c7920746f20726566756e642e00000000000000000000000081525060200191505060405180910390fd5b8060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600301549081150290604051600060405180830381858888f19350505050158015610408573d6000803e3d6000fd5b5060028160050160006101000a81548160ff0219169083600281111561042a57fe5b02179055507fa60671d8537ed193e567f86ddf28cf35dc67073b5ad80a2d41359cfa78db0a1e8260405180826000191660001916815260200191505060405180910390a15050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561055c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f81526020017f6e2e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61708081111515156105d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f44656c617920697320746f6f206c617267652e0000000000000000000000000081525060200191505060405180910390fd5b8060018190555050565b60006002600084600019166000191681526020019081526020016000209050600115158160050160019054906101000a900460ff16151514151561068c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f4f7264657220646f6573206e6f742065786973742e000000000000000000000081525060200191505060405180910390fd5b6000600281111561069957fe5b8160050160009054906101000a900460ff1660028111156106b657fe5b14151561072b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4f726465722063616e6e6f7420626520636c61696d65642e000000000000000081525060200191505060405180910390fd5b8060010154600019166002836040516020018082600019166000191681526020019150506040516020818303038152906040526040518082805190602001908083835b602083101515610793578051825260208201915060208101905060208303925061076e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506020604051808303816000865af11580156107d7573d6000803e3d6000fd5b5050506040513d60208110156107ec57600080fd5b810190808051906020019092919050505060001916141515610876576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f496e636f7272656374207061796d656e7420707265696d6167652e000000000081525060200191505060405180910390fd5b806004015443111515156108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f546f6f206c61746520746f20636c61696d2e000000000000000000000000000081525060200191505060405180910390fd5b818160020181600019169055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600301549081150290604051600060405180830381858888f1935050505015801561096a573d6000803e3d6000fd5b5060018160050160006101000a81548160ff0219169083600281111561098c57fe5b02179055507f0c13aa7929c5c9e7c9016c3bf2e75f11d73c20567d6678012838b4d59c0c813d8360405180826000191660001916815260200191505060405180910390a1505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060026000846000191660001916815260200190815260200160002090508060050160019054906101000a900460ff161515610ae057338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160050160016101000a81548160ff021916908315150217905550818160010181600019169055506001544301816004018190555060008160050160006101000a81548160ff02191690836002811115610acc57fe5b021790555060008160030181905550610ba6565b60006002811115610aed57fe5b8160050160009054906101000a900460ff166002811115610b0a57fe5b141515610ba5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001807f4f7264657220616c726561647920636c61696d6564206f7220726566756e646581526020017f642e00000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b3481600301600082825401925050819055507feae2c1838221fcace931b32f3f7dd42d29269e6e3f0c872061bd59763851312283826003015483600101548460040154604051808560001916600019168152602001848152602001836000191660001916815260200182815260200194505050505060405180910390a15050505600a165627a7a7230582050f043850e181e9cf6a3b5b971846d9efe7ae0f58c3f276484d985d2600d1bd50029",
  "source": "pragma solidity ^0.4.24;\n\nimport \"./Swap.sol\";\n\ncontract EtherSwap is Swap {\n    enum OrderState { HasFundingBalance, Claimed, Refunded }\n\n    struct SwapOrder {\n        address user;\n        bytes32 paymentHash;\n        bytes32 preimage;\n        uint onchainAmount;\n        uint refundBlockHeight;\n        OrderState state;\n        bool exist;\n    }\n    \n    mapping(bytes32 => SwapOrder) orders;\n\n    event OrderFundingReceived(bytes32 lninvoiceHash, uint onchainAmount, bytes32 paymentHash, uint refundBlockHeight);\n    event OrderClaimed(bytes32 lninvoiceHash);\n    event OrderRefunded(bytes32 lninvoiceHash);\n    \n    /**\n     * Allow the sender to fund a swap in one or more transactions.\n     */\n    function fund(bytes32 lninvoiceHash, bytes32 paymentHash) public payable {\n        SwapOrder storage order = orders[lninvoiceHash];\n\n        if (!order.exist) {\n            order.user = msg.sender;\n            order.exist = true;\n            order.paymentHash = paymentHash;\n            order.refundBlockHeight = block.number + refundDelay;\n            order.state = OrderState.HasFundingBalance;\n            order.onchainAmount = 0;\n        } else {\n            require(order.state == OrderState.HasFundingBalance, \"Order already claimed or refunded.\");\n        }\n        order.onchainAmount += msg.value;\n            \n        emit OrderFundingReceived(lninvoiceHash, order.onchainAmount, order.paymentHash, order.refundBlockHeight);\n    }\n\n    /**\n     * Allow the recipient to claim the funds once they know the preimage of the hashlock.\n     * Anyone can claim but tokens only send to owner.\n     */\n    function claim(bytes32 lninvoiceHash, bytes32 preimage) public {\n        SwapOrder storage order = orders[lninvoiceHash];\n\n        require(order.exist == true, \"Order does not exist.\");\n        require(order.state == OrderState.HasFundingBalance, \"Order cannot be claimed.\");\n        require(sha256(abi.encodePacked(preimage)) == order.paymentHash, \"Incorrect payment preimage.\");\n        require(block.number <= order.refundBlockHeight, \"Too late to claim.\");\n        \n        order.preimage = preimage;\n        owner.transfer(order.onchainAmount);\n        order.state = OrderState.Claimed;\n            \n        emit OrderClaimed(lninvoiceHash);\n    }\n    \n    /**\n     * Refund the sent amount back to the funder if the timelock has expired.\n     */\n    function refund(bytes32 lninvoiceHash) public {\n        SwapOrder storage order = orders[lninvoiceHash];\n        \n        require(order.exist == true, \"Order does not exist.\");\n        require(order.state == OrderState.HasFundingBalance, \"Order cannot be refunded.\");\n        require(block.number > order.refundBlockHeight, \"Too early to refund.\");\n        \n        order.user.transfer(order.onchainAmount);\n        order.state = OrderState.Refunded;\n            \n        emit OrderRefunded(lninvoiceHash);\n    }\n}\n",
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "updatedAt": "2018-12-11T17:40:29.452Z"
}
