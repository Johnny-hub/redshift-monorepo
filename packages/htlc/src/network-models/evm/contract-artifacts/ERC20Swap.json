{
  "contractName": "ERC20Swap",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes16",
          "name": "orderUUID",
          "type": "bytes16"
        }
      ],
      "name": "OrderClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes16",
          "name": "orderUUID",
          "type": "bytes16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "onchainAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "paymentHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refundBlockHeight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenContractAddress",
          "type": "address"
        }
      ],
      "name": "OrderFundingReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes16",
          "name": "orderUUID",
          "type": "bytes16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "onchainAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "paymentHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "refundBlockHeight",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenContractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "refundHash",
          "type": "bytes32"
        }
      ],
      "name": "OrderFundingReceived",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes16",
          "name": "orderUUID",
          "type": "bytes16"
        }
      ],
      "name": "OrderRefunded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "refundDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "delay",
          "type": "uint256"
        }
      ],
      "name": "setRefundDelay",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "paymentHash",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "tokenContractAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20Swap.FundDetails",
          "name": "details",
          "type": "tuple"
        }
      ],
      "name": "fund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "paymentHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refundHash",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "tokenContractAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20Swap.FundWithRefundHashlockDetails",
          "name": "details",
          "type": "tuple"
        }
      ],
      "name": "fundWithRefundHashlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "paymentPreimage",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ERC20Swap.ClaimDetails",
          "name": "details",
          "type": "tuple"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "orderUUID",
          "type": "bytes16"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "refundPreimage",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ERC20Swap.AdminRefundDetails",
          "name": "details",
          "type": "tuple"
        }
      ],
      "name": "adminRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "paymentHash",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "tokenContractAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20Swap.FundDetails[]",
          "name": "details",
          "type": "tuple[]"
        }
      ],
      "name": "batchFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "paymentHash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "refundHash",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "tokenContractAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct ERC20Swap.FundWithRefundHashlockDetails[]",
          "name": "details",
          "type": "tuple[]"
        }
      ],
      "name": "batchFundWithRefundHashlock",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "paymentPreimage",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ERC20Swap.ClaimDetails[]",
          "name": "details",
          "type": "tuple[]"
        }
      ],
      "name": "batchClaim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16[]",
          "name": "orderUUIDs",
          "type": "bytes16[]"
        }
      ],
      "name": "batchRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "internalType": "bytes32",
              "name": "refundPreimage",
              "type": "bytes32"
            }
          ],
          "internalType": "struct ERC20Swap.AdminRefundDetails[]",
          "name": "details",
          "type": "tuple[]"
        }
      ],
      "name": "batchAdminRefund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526103c0600155600080546001600160a01b03191633179055611c458061002b6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063bd98a1251161008c578063ce35a15f11610066578063ce35a15f146101bc578063dfdecfaf146101cf578063f2fde38b146101e2578063ff2cca54146101f5576100ea565b8063bd98a12514610183578063c6236e0514610196578063cc24f542146101a9576100ea565b80636dc1fb6f116100c85780636dc1fb6f146101355780637bfa9819146101485780638da5cb5b1461015b5780638ed86f0614610170576100ea565b806331b533cf146100ef5780633e602b4c146101045780633f27a36314610122575b600080fd5b6101026100fd366004611409565b610208565b005b61010c610244565b60405161011991906116d8565b60405180910390f35b6101026101303660046115e0565b61024a565b610102610143366004611638565b61054d565b6101026101563660046116c0565b610864565b6101636108f6565b604051610119919061171a565b61010261017e3660046115c5565b610912565b6101026101913660046114b5565b610c32565b6101026101a4366004611475565b610c6a565b6101026101b7366004611513565b610ca2565b6101026101ca3660046115c5565b610cda565b6101026101dd366004611591565b610ff5565b6101026101f03660046113e6565b611245565b610102610203366004611475565b6112dd565b60005b8181101561023f5761023783838381811061022257fe5b90506020020160206101dd9190810190611591565b60010161020b565b505050565b60015481565b80517fffffffffffffffffffffffffffffffff000000000000000000000000000000001660009081526002602052604090206006810154610100900460ff166103535780547fffffffffffffffffffffffff00000000000000000000000000000000000000009081163317825560408301516001808401805473ffffffffffffffffffffffffffffffffffffffff90931692909316919091179091556006820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1661010017808255602085015160028501559154430160058401557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091169055610403565b6000600682015460ff16600281111561036857fe5b146103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a93565b60405180910390fd5b6040820151600182015473ffffffffffffffffffffffffffffffffffffffff908116911614610403576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906118db565b816040015173ffffffffffffffffffffffffffffffffffffffff166323b872dd333085606001516040518463ffffffff1660e01b81526004016104489392919061173b565b602060405180830381600087803b15801561046257600080fd5b505af1158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061049a9190810190611571565b6104d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a25565b60608201516004820180549091019081905582516002830154600584015460018501546040517f89abd53b328271c678e59d9fc06050a3351506621408a943039ff55b4b4de20d95610541959490939092909173ffffffffffffffffffffffffffffffffffffffff909116906117bf565b60405180910390a15050565b80517fffffffffffffffffffffffffffffffff000000000000000000000000000000001660009081526002602052604090206006810154610100900460ff166106605780547fffffffffffffffffffffffff00000000000000000000000000000000000000009081163317825560608301516001808401805473ffffffffffffffffffffffffffffffffffffffff90931692909316919091179091556006820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001780825560208501516002850155604085015160038501559154430160058401557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091169055610707565b6000600682015460ff16600281111561067557fe5b146106ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a93565b6060820151600182015473ffffffffffffffffffffffffffffffffffffffff908116911614610707576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906118db565b606082015160808301516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916323b872dd91610766913391309160040161173b565b602060405180830381600087803b15801561078057600080fd5b505af1158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107b89190810190611571565b6107ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a25565b608082015160048201805490910190819055825160028301546005840154600185015460038601546040517f5aeb9eb98976bbe85b932902b70c3b33d8c114614fecb52a68bc123337fb0c0b96610541969590949093909273ffffffffffffffffffffffffffffffffffffffff9091169161181c565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f9061187e565b6170808111156108f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611912565b600155565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b80517fffffffffffffffffffffffffffffffff00000000000000000000000000000000166000908152600260205260409020600681015460ff61010090910416151560011461098d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906119ee565b6000600682015460ff1660028111156109a257fe5b146109d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611b5e565b8060020154600283602001516040516020016109f591906116d8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a2d916116e1565b602060405180830381855afa158015610a4a573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250610a6d91908101906115ad565b14610aa4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611949565b8060050154431115610ae2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611af0565b6006810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091558101546000546004808401546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9485169463a9059cbb94610b7194911692910161176c565b602060405180830381600087803b158015610b8b57600080fd5b505af1158015610b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bc39190810190611571565b610bf9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a25565b610c0281611315565b81516040517f96a7ce28124a58eee4f04c2ee97fd44eb93c29d0df55a43fa5e0daccb20a0be59161054191611792565b60005b8181101561023f57610c62838383818110610c4c57fe5b90506080020180360361013091908101906115e0565b600101610c35565b60005b8181101561023f57610c9a838383818110610c8457fe5b9050604002018036036101ca91908101906115c5565b600101610c6d565b60005b8181101561023f57610cd2838383818110610cbc57fe5b905060a002018036036101439190810190611638565b600101610ca5565b80517fffffffffffffffffffffffffffffffff00000000000000000000000000000000166000908152600260205260409020600681015460ff610100909104161515600114610d55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906119ee565b6000600682015460ff166002811115610d6a57fe5b14610da1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611980565b6003810154610ddc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611b27565b806003015460028360200151604051602001610df891906116d8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610e30916116e1565b602060405180830381855afa158015610e4d573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250610e7091908101906115ad565b14610ea7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906119b7565b6006810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166002179055600181015481546004808401546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9485169463a9059cbb94610f3494911692910161176c565b602060405180830381600087803b158015610f4e57600080fd5b505af1158015610f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f869190810190611571565b610fbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a25565b610fc581611315565b81516040517f0fc93734e5a973e72ab53332bf6e822d652e9d044fa7f4fe3b13028352c148809161054191611792565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000081166000908152600260205260409020600681015460ff61010090910416151560011461106f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906119ee565b6000600682015460ff16600281111561108457fe5b146110bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611980565b806005015443116110f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a5c565b6006810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166002179055600181015481546004808401546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9485169463a9059cbb9461118594911692910161176c565b602060405180830381600087803b15801561119f57600080fd5b505af11580156111b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111d79190810190611571565b61120d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a25565b61121681611315565b7f0fc93734e5a973e72ab53332bf6e822d652e9d044fa7f4fe3b13028352c14880826040516105419190611792565b60005473ffffffffffffffffffffffffffffffffffffffff163314611296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f9061187e565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005b8181101561023f5761130d8383838181106112f757fe5b90506040020180360361017e91908101906115c5565b6001016112e0565b80547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168255600182018054909116905560006002820181905560048201819055600590910155565b60008083601f840112611371578182fd5b50813567ffffffffffffffff811115611388578182fd5b6020830191508360206040830285010111156113a357600080fd5b9250929050565b6000604082840312156113bb578081fd5b6113c56040611b95565b905081356113d281611be1565b808252506020820135602082015292915050565b6000602082840312156113f7578081fd5b813561140281611bbc565b9392505050565b6000806020838503121561141b578081fd5b823567ffffffffffffffff80821115611432578283fd5b81850186601f820112611443578384fd5b8035925081831115611453578384fd5b8660208085028301011115611466578384fd5b60200196919550909350505050565b60008060208385031215611487578182fd5b823567ffffffffffffffff81111561149d578283fd5b6114a985828601611360565b90969095509350505050565b600080602083850312156114c7578182fd5b823567ffffffffffffffff808211156114de578384fd5b81850186601f8201126114ef578485fd5b80359250818311156114ff578485fd5b866020608085028301011115611466578485fd5b60008060208385031215611525578182fd5b823567ffffffffffffffff8082111561153c578384fd5b81850186601f82011261154d578485fd5b803592508183111561155d578485fd5b86602060a085028301011115611466578485fd5b600060208284031215611582578081fd5b81518015158114611402578182fd5b6000602082840312156115a2578081fd5b813561140281611be1565b6000602082840312156115be578081fd5b5051919050565b6000604082840312156115d6578081fd5b61140283836113aa565b6000608082840312156115f1578081fd5b6115fb6080611b95565b823561160681611be1565b815260208381013590820152604083013561162081611bbc565b60408201526060928301359281019290925250919050565b600060a08284031215611649578081fd5b61165360a0611b95565b82357fffffffffffffffffffffffffffffffff0000000000000000000000000000000081168114611682578283fd5b80825250602083013560208201526040830135604082015260608301356116a881611bbc565b60608201526080928301359281019290925250919050565b6000602082840312156116d1578081fd5b5035919050565b90815260200190565b60008251815b8181101561170157602081860181015185830152016116e7565b8181111561170f5782828501525b509190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000091909116815260200190565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000095909516855260208501939093526040840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00190565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000096909616865260208601949094526040850192909252606084015273ffffffffffffffffffffffffffffffffffffffff16608083015260a082015260c00190565b60208082526022908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60408201527f6e2e000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526010908201527f496e636f727265637420746f6b656e2e00000000000000000000000000000000604082015260600190565b60208082526013908201527f44656c617920697320746f6f206c617267652e00000000000000000000000000604082015260600190565b6020808252601b908201527f496e636f7272656374207061796d656e7420707265696d6167652e0000000000604082015260600190565b60208082526019908201527f4f726465722063616e6e6f7420626520726566756e6465642e00000000000000604082015260600190565b6020808252601a908201527f496e636f727265637420726566756e6420707265696d6167652e000000000000604082015260600190565b60208082526015908201527f4f7264657220646f6573206e6f742065786973742e0000000000000000000000604082015260600190565b60208082526019908201527f556e61626c6520746f207472616e7366657220746f6b656e2e00000000000000604082015260600190565b60208082526014908201527f546f6f206561726c7920746f20726566756e642e000000000000000000000000604082015260600190565b60208082526022908201527f4f7264657220616c726561647920636c61696d6564206f7220726566756e646560408201527f642e000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526012908201527f546f6f206c61746520746f20636c61696d2e0000000000000000000000000000604082015260600190565b60208082526019908201527f41646d696e20726566756e64206e6f7420616c6c6f7765642e00000000000000604082015260600190565b60208082526018908201527f4f726465722063616e6e6f7420626520636c61696d65642e0000000000000000604082015260600190565b60405181810167ffffffffffffffff81118282101715611bb457600080fd5b604052919050565b73ffffffffffffffffffffffffffffffffffffffff81168114611bde57600080fd5b50565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000081168114611bde57600080fdfea2646970667358221220512fe7d6b6b94e8dd003e56a25a7e73dd45723d135c464f1d2ecf646f9a58e2164736f6c63430006010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063bd98a1251161008c578063ce35a15f11610066578063ce35a15f146101bc578063dfdecfaf146101cf578063f2fde38b146101e2578063ff2cca54146101f5576100ea565b8063bd98a12514610183578063c6236e0514610196578063cc24f542146101a9576100ea565b80636dc1fb6f116100c85780636dc1fb6f146101355780637bfa9819146101485780638da5cb5b1461015b5780638ed86f0614610170576100ea565b806331b533cf146100ef5780633e602b4c146101045780633f27a36314610122575b600080fd5b6101026100fd366004611409565b610208565b005b61010c610244565b60405161011991906116d8565b60405180910390f35b6101026101303660046115e0565b61024a565b610102610143366004611638565b61054d565b6101026101563660046116c0565b610864565b6101636108f6565b604051610119919061171a565b61010261017e3660046115c5565b610912565b6101026101913660046114b5565b610c32565b6101026101a4366004611475565b610c6a565b6101026101b7366004611513565b610ca2565b6101026101ca3660046115c5565b610cda565b6101026101dd366004611591565b610ff5565b6101026101f03660046113e6565b611245565b610102610203366004611475565b6112dd565b60005b8181101561023f5761023783838381811061022257fe5b90506020020160206101dd9190810190611591565b60010161020b565b505050565b60015481565b80517fffffffffffffffffffffffffffffffff000000000000000000000000000000001660009081526002602052604090206006810154610100900460ff166103535780547fffffffffffffffffffffffff00000000000000000000000000000000000000009081163317825560408301516001808401805473ffffffffffffffffffffffffffffffffffffffff90931692909316919091179091556006820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1661010017808255602085015160028501559154430160058401557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091169055610403565b6000600682015460ff16600281111561036857fe5b146103a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a93565b60405180910390fd5b6040820151600182015473ffffffffffffffffffffffffffffffffffffffff908116911614610403576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906118db565b816040015173ffffffffffffffffffffffffffffffffffffffff166323b872dd333085606001516040518463ffffffff1660e01b81526004016104489392919061173b565b602060405180830381600087803b15801561046257600080fd5b505af1158015610476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061049a9190810190611571565b6104d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a25565b60608201516004820180549091019081905582516002830154600584015460018501546040517f89abd53b328271c678e59d9fc06050a3351506621408a943039ff55b4b4de20d95610541959490939092909173ffffffffffffffffffffffffffffffffffffffff909116906117bf565b60405180910390a15050565b80517fffffffffffffffffffffffffffffffff000000000000000000000000000000001660009081526002602052604090206006810154610100900460ff166106605780547fffffffffffffffffffffffff00000000000000000000000000000000000000009081163317825560608301516001808401805473ffffffffffffffffffffffffffffffffffffffff90931692909316919091179091556006820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001780825560208501516002850155604085015160038501559154430160058401557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091169055610707565b6000600682015460ff16600281111561067557fe5b146106ac576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a93565b6060820151600182015473ffffffffffffffffffffffffffffffffffffffff908116911614610707576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906118db565b606082015160808301516040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216916323b872dd91610766913391309160040161173b565b602060405180830381600087803b15801561078057600080fd5b505af1158015610794573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107b89190810190611571565b6107ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a25565b608082015160048201805490910190819055825160028301546005840154600185015460038601546040517f5aeb9eb98976bbe85b932902b70c3b33d8c114614fecb52a68bc123337fb0c0b96610541969590949093909273ffffffffffffffffffffffffffffffffffffffff9091169161181c565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f9061187e565b6170808111156108f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611912565b600155565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b80517fffffffffffffffffffffffffffffffff00000000000000000000000000000000166000908152600260205260409020600681015460ff61010090910416151560011461098d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906119ee565b6000600682015460ff1660028111156109a257fe5b146109d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611b5e565b8060020154600283602001516040516020016109f591906116d8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610a2d916116e1565b602060405180830381855afa158015610a4a573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250610a6d91908101906115ad565b14610aa4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611949565b8060050154431115610ae2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611af0565b6006810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660019081179091558101546000546004808401546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9485169463a9059cbb94610b7194911692910161176c565b602060405180830381600087803b158015610b8b57600080fd5b505af1158015610b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bc39190810190611571565b610bf9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a25565b610c0281611315565b81516040517f96a7ce28124a58eee4f04c2ee97fd44eb93c29d0df55a43fa5e0daccb20a0be59161054191611792565b60005b8181101561023f57610c62838383818110610c4c57fe5b90506080020180360361013091908101906115e0565b600101610c35565b60005b8181101561023f57610c9a838383818110610c8457fe5b9050604002018036036101ca91908101906115c5565b600101610c6d565b60005b8181101561023f57610cd2838383818110610cbc57fe5b905060a002018036036101439190810190611638565b600101610ca5565b80517fffffffffffffffffffffffffffffffff00000000000000000000000000000000166000908152600260205260409020600681015460ff610100909104161515600114610d55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906119ee565b6000600682015460ff166002811115610d6a57fe5b14610da1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611980565b6003810154610ddc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611b27565b806003015460028360200151604051602001610df891906116d8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610e30916116e1565b602060405180830381855afa158015610e4d573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250610e7091908101906115ad565b14610ea7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906119b7565b6006810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166002179055600181015481546004808401546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9485169463a9059cbb94610f3494911692910161176c565b602060405180830381600087803b158015610f4e57600080fd5b505af1158015610f62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f869190810190611571565b610fbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a25565b610fc581611315565b81516040517f0fc93734e5a973e72ab53332bf6e822d652e9d044fa7f4fe3b13028352c148809161054191611792565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000081166000908152600260205260409020600681015460ff61010090910416151560011461106f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f906119ee565b6000600682015460ff16600281111561108457fe5b146110bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611980565b806005015443116110f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a5c565b6006810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166002179055600181015481546004808401546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9485169463a9059cbb9461118594911692910161176c565b602060405180830381600087803b15801561119f57600080fd5b505af11580156111b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111d79190810190611571565b61120d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f90611a25565b61121681611315565b7f0fc93734e5a973e72ab53332bf6e822d652e9d044fa7f4fe3b13028352c14880826040516105419190611792565b60005473ffffffffffffffffffffffffffffffffffffffff163314611296576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039f9061187e565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005b8181101561023f5761130d8383838181106112f757fe5b90506040020180360361017e91908101906115c5565b6001016112e0565b80547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168255600182018054909116905560006002820181905560048201819055600590910155565b60008083601f840112611371578182fd5b50813567ffffffffffffffff811115611388578182fd5b6020830191508360206040830285010111156113a357600080fd5b9250929050565b6000604082840312156113bb578081fd5b6113c56040611b95565b905081356113d281611be1565b808252506020820135602082015292915050565b6000602082840312156113f7578081fd5b813561140281611bbc565b9392505050565b6000806020838503121561141b578081fd5b823567ffffffffffffffff80821115611432578283fd5b81850186601f820112611443578384fd5b8035925081831115611453578384fd5b8660208085028301011115611466578384fd5b60200196919550909350505050565b60008060208385031215611487578182fd5b823567ffffffffffffffff81111561149d578283fd5b6114a985828601611360565b90969095509350505050565b600080602083850312156114c7578182fd5b823567ffffffffffffffff808211156114de578384fd5b81850186601f8201126114ef578485fd5b80359250818311156114ff578485fd5b866020608085028301011115611466578485fd5b60008060208385031215611525578182fd5b823567ffffffffffffffff8082111561153c578384fd5b81850186601f82011261154d578485fd5b803592508183111561155d578485fd5b86602060a085028301011115611466578485fd5b600060208284031215611582578081fd5b81518015158114611402578182fd5b6000602082840312156115a2578081fd5b813561140281611be1565b6000602082840312156115be578081fd5b5051919050565b6000604082840312156115d6578081fd5b61140283836113aa565b6000608082840312156115f1578081fd5b6115fb6080611b95565b823561160681611be1565b815260208381013590820152604083013561162081611bbc565b60408201526060928301359281019290925250919050565b600060a08284031215611649578081fd5b61165360a0611b95565b82357fffffffffffffffffffffffffffffffff0000000000000000000000000000000081168114611682578283fd5b80825250602083013560208201526040830135604082015260608301356116a881611bbc565b60608201526080928301359281019290925250919050565b6000602082840312156116d1578081fd5b5035919050565b90815260200190565b60008251815b8181101561170157602081860181015185830152016116e7565b8181111561170f5782828501525b509190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000091909116815260200190565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000095909516855260208501939093526040840191909152606083015273ffffffffffffffffffffffffffffffffffffffff16608082015260a00190565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000096909616865260208601949094526040850192909252606084015273ffffffffffffffffffffffffffffffffffffffff16608083015260a082015260c00190565b60208082526022908201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60408201527f6e2e000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526010908201527f496e636f727265637420746f6b656e2e00000000000000000000000000000000604082015260600190565b60208082526013908201527f44656c617920697320746f6f206c617267652e00000000000000000000000000604082015260600190565b6020808252601b908201527f496e636f7272656374207061796d656e7420707265696d6167652e0000000000604082015260600190565b60208082526019908201527f4f726465722063616e6e6f7420626520726566756e6465642e00000000000000604082015260600190565b6020808252601a908201527f496e636f727265637420726566756e6420707265696d6167652e000000000000604082015260600190565b60208082526015908201527f4f7264657220646f6573206e6f742065786973742e0000000000000000000000604082015260600190565b60208082526019908201527f556e61626c6520746f207472616e7366657220746f6b656e2e00000000000000604082015260600190565b60208082526014908201527f546f6f206561726c7920746f20726566756e642e000000000000000000000000604082015260600190565b60208082526022908201527f4f7264657220616c726561647920636c61696d6564206f7220726566756e646560408201527f642e000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526012908201527f546f6f206c61746520746f20636c61696d2e0000000000000000000000000000604082015260600190565b60208082526019908201527f41646d696e20726566756e64206e6f7420616c6c6f7765642e00000000000000604082015260600190565b60208082526018908201527f4f726465722063616e6e6f7420626520636c61696d65642e0000000000000000604082015260600190565b60405181810167ffffffffffffffff81118282101715611bb457600080fd5b604052919050565b73ffffffffffffffffffffffffffffffffffffffff81168114611bde57600080fd5b50565b7fffffffffffffffffffffffffffffffff0000000000000000000000000000000081168114611bde57600080fdfea2646970667358221220512fe7d6b6b94e8dd003e56a25a7e73dd45723d135c464f1d2ecf646f9a58e2164736f6c63430006010033",
  "source": "pragma solidity ^0.6.1;\npragma experimental ABIEncoderV2;\n\nimport \"./Swap.sol\";\nimport \"./IERC20.sol\";\n\ncontract ERC20Swap is Swap {\n    enum OrderState { HasFundingBalance, Claimed, Refunded }\n\n    struct FundDetails {\n        bytes16 orderUUID;\n        bytes32 paymentHash;\n        address tokenContractAddress;\n        uint256 tokenAmount;\n    }\n    struct FundWithRefundHashlockDetails {\n        bytes16 orderUUID;\n        bytes32 paymentHash;\n        bytes32 refundHash;\n        address tokenContractAddress;\n        uint256 tokenAmount;\n    }\n    struct ClaimDetails {\n        bytes16 orderUUID;\n        bytes32 paymentPreimage;\n    }\n    struct AdminRefundDetails {\n        bytes16 orderUUID;\n        bytes32 refundPreimage;\n    }\n    struct SwapOrder {\n        address user;\n        address tokenContractAddress;\n        bytes32 paymentHash;\n        bytes32 refundHash;\n        uint256 onchainAmount;\n        uint256 refundBlockHeight;\n        OrderState state;\n        bool exist;\n    }\n\n    mapping(bytes16 => SwapOrder) orders;\n\n    event OrderFundingReceived(\n        bytes16 orderUUID,\n        uint256 onchainAmount,\n        bytes32 paymentHash,\n        uint256 refundBlockHeight,\n        address tokenContractAddress\n    );\n    event OrderFundingReceived(\n        bytes16 orderUUID,\n        uint256 onchainAmount,\n        bytes32 paymentHash,\n        uint256 refundBlockHeight,\n        address tokenContractAddress,\n        bytes32 refundHash\n    );\n    event OrderClaimed(bytes16 orderUUID);\n    event OrderRefunded(bytes16 orderUUID);\n\n    /**\n     * Delete the order data that is no longer necessary after a swap is claimed or refunded.\n     */\n    function deleteUnnecessaryOrderData(SwapOrder storage order) internal {\n        delete order.user;\n        delete order.tokenContractAddress;\n        delete order.paymentHash;\n        delete order.onchainAmount;\n        delete order.refundBlockHeight;\n    }\n\n    /**\n     * Allow the sender to fund a swap in one or more transactions.\n     */\n    function fund(FundDetails memory details) public {\n        SwapOrder storage order = orders[details.orderUUID];\n\n        if (!order.exist) {\n            order.user = msg.sender;\n            order.tokenContractAddress = details.tokenContractAddress;\n            order.exist = true;\n            order.paymentHash = details.paymentHash;\n            order.refundBlockHeight = block.number + refundDelay;\n            order.state = OrderState.HasFundingBalance;\n        } else {\n            require(order.state == OrderState.HasFundingBalance, \"Order already claimed or refunded.\");\n            require(order.tokenContractAddress == details.tokenContractAddress, \"Incorrect token.\");\n        }\n\n        // Fund token to this contract\n        require(\n            IERC20(details.tokenContractAddress)\n                .transferFrom(msg.sender, address(this), details.tokenAmount), \"Unable to transfer token.\"\n        );\n        order.onchainAmount += details.tokenAmount;\n\n        emit OrderFundingReceived(\n            details.orderUUID,\n            order.onchainAmount,\n            order.paymentHash,\n            order.refundBlockHeight,\n            order.tokenContractAddress\n        );\n    }\n\n    /**\n     * Allow the sender to fund a swap in one or more transactions and provide a refund\n     * hash, which can enable faster refunds if the refund preimage is supplied.\n     */\n    function fundWithRefundHashlock(FundWithRefundHashlockDetails memory details) public {\n        SwapOrder storage order = orders[details.orderUUID];\n\n        if (!order.exist) {\n            order.user = msg.sender;\n            order.tokenContractAddress = details.tokenContractAddress;\n            order.exist = true;\n            order.paymentHash = details.paymentHash;\n            order.refundHash = details.refundHash;\n            order.refundBlockHeight = block.number + refundDelay;\n            order.state = OrderState.HasFundingBalance;\n        } else {\n            require(order.state == OrderState.HasFundingBalance, \"Order already claimed or refunded.\");\n            require(order.tokenContractAddress == details.tokenContractAddress, \"Incorrect token.\");\n        }\n\n        // Fund token to this contract\n        require(\n            IERC20(details.tokenContractAddress)\n                .transferFrom(msg.sender, address(this), details.tokenAmount), \"Unable to transfer token.\"\n        );\n        order.onchainAmount += details.tokenAmount;\n\n        emit OrderFundingReceived(\n            details.orderUUID,\n            order.onchainAmount,\n            order.paymentHash,\n            order.refundBlockHeight,\n            order.tokenContractAddress,\n            order.refundHash\n        );\n    }\n\n    /**\n     * Allow the recipient to claim the funds once they know the preimage of the hashlock.\n     * Anyone can claim, but the tokens will always be sent to the owner.\n     */\n    function claim(ClaimDetails memory details) public {\n        SwapOrder storage order = orders[details.orderUUID];\n\n        require(order.exist == true, \"Order does not exist.\");\n        require(order.state == OrderState.HasFundingBalance, \"Order cannot be claimed.\");\n        require(sha256(abi.encodePacked(details.paymentPreimage)) == order.paymentHash, \"Incorrect payment preimage.\");\n        require(block.number <= order.refundBlockHeight, \"Too late to claim.\");\n\n        order.state = OrderState.Claimed;\n\n        // Transfer tokens to the contract owner\n        require(\n            IERC20(order.tokenContractAddress)\n                .transfer(owner, order.onchainAmount), \"Unable to transfer token.\"\n        );\n\n        deleteUnnecessaryOrderData(order);\n        emit OrderClaimed(details.orderUUID);\n    }\n\n    /**\n     * Refund the sent token amount back to the funder if the timelock has expired.\n     */\n    function refund(bytes16 orderUUID) public {\n        SwapOrder storage order = orders[orderUUID];\n\n        require(order.exist == true, \"Order does not exist.\");\n        require(order.state == OrderState.HasFundingBalance, \"Order cannot be refunded.\");\n        require(block.number > order.refundBlockHeight, \"Too early to refund.\");\n\n        order.state = OrderState.Refunded;\n\n        // Transfer tokens back to the original funder\n        require(\n            IERC20(order.tokenContractAddress)\n                .transfer(order.user, order.onchainAmount), \"Unable to transfer token.\"\n        );\n\n        deleteUnnecessaryOrderData(order);\n        emit OrderRefunded(orderUUID);\n    }\n\n    /**\n     * Refund the sent token amount back to the funder if a valid refund preimage is supplied.\n     * This provides a better UX than a timelocked refund. It is entirely at the discretion\n     * of the entity on the opposite side of the swap as to whether the refund preimage will\n     * be provided to the funder, but is recommended once it's decided that a claim transaction\n     * will not be submitted.\n     */\n    function adminRefund(AdminRefundDetails memory details) public {\n        SwapOrder storage order = orders[details.orderUUID];\n\n        require(order.exist == true, \"Order does not exist.\");\n        require(order.state == OrderState.HasFundingBalance, \"Order cannot be refunded.\");\n        require(order.refundHash != 0, \"Admin refund not allowed.\");\n        require(sha256(abi.encodePacked(details.refundPreimage)) == order.refundHash, \"Incorrect refund preimage.\");\n\n        order.state = OrderState.Refunded;\n\n        // Transfer tokens back to the original funder\n        require(\n            IERC20(order.tokenContractAddress)\n                .transfer(order.user, order.onchainAmount), \"Unable to transfer token.\"\n        );\n\n        deleteUnnecessaryOrderData(order);\n        emit OrderRefunded(details.orderUUID);\n    }\n\n    /**\n     * Allow the sender to fund multiple swaps in one or more transactions.\n     */\n    function batchFund(FundDetails[] calldata details) external {\n        for (uint256 i = 0; i < details.length; i++) {\n            fund(details[i]);\n        }\n    }\n\n    /**\n     * Allow the sender to fund multiple swaps in one or more transactions and\n     * provide a refund hashes, which can enable faster refunds if the refund preimage is supplied.\n     */\n    function batchFundWithRefundHashlock(FundWithRefundHashlockDetails[] calldata details) external {\n        for (uint256 i = 0; i < details.length; i++) {\n            fundWithRefundHashlock(details[i]);\n        }\n    }\n\n    /**\n     * Allow the recipient to claim the funds for multiple swaps once they know the preimage of the hashlock.\n     * Anyone can claim, but the tokens will always be sent to the owner.\n     */\n    function batchClaim(ClaimDetails[] calldata details) external {\n        for (uint256 i = 0; i < details.length; i++) {\n            claim(details[i]);\n        }\n    }\n\n    /**\n     * Refund the sent token amounts back to the funders if the timelocks have expired.\n     */\n    function batchRefund(bytes16[] calldata orderUUIDs) external {\n        for (uint256 i = 0; i < orderUUIDs.length; i++) {\n            refund(orderUUIDs[i]);\n        }\n    }\n\n    /**\n     * Refund the sent token amounts back to the funder if a valid refund preimage is supplied.\n     * This provides a better UX than a timelocked refund. It is entirely at the discretion\n     * of the entity on the opposite side of the swap as to whether the refund preimage will\n     * be provided to the funder, but is recommended once it's decided that a claim transaction\n     * will not be submitted.\n     */\n    function batchAdminRefund(AdminRefundDetails[] calldata details) external {\n        for (uint256 i = 0; i < details.length; i++) {\n            adminRefund(details[i]);\n        }\n    }\n}\n",
  "compiler": {
    "name": "solc",
    "version": "0.6.1+commit.e6f7d5a4.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x1fc3404b2b61946be5891f39322172e289ee6947959fd6ace7e6f754ac30b1c7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "indexed": false,
              "name": "onchainAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "paymentHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "refundBlockHeight",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "tokenContractAddress",
              "type": "address"
            }
          ],
          "name": "OrderErc20FundingReceived",
          "type": "event",
          "signature": "0x1fc3404b2b61946be5891f39322172e289ee6947959fd6ace7e6f754ac30b1c7"
        },
        "0x4be7082001f60f2505b01150c05e41746eebdc14140ea85873ab800288d3fedd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            }
          ],
          "name": "OrderErc20Claimed",
          "type": "event",
          "signature": "0x4be7082001f60f2505b01150c05e41746eebdc14140ea85873ab800288d3fedd"
        },
        "0xcfcf29fab214c4c5d494671a1fefb8a5efa9359fe62863910138b7f2881de63d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            }
          ],
          "name": "OrderErc20Refunded",
          "type": "event",
          "signature": "0xcfcf29fab214c4c5d494671a1fefb8a5efa9359fe62863910138b7f2881de63d"
        },
        "0x89abd53b328271c678e59d9fc06050a3351506621408a943039ff55b4b4de20d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "indexed": false,
              "name": "onchainAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "paymentHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "refundBlockHeight",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "tokenContractAddress",
              "type": "address"
            }
          ],
          "name": "OrderFundingReceived",
          "type": "event",
          "signature": "0x89abd53b328271c678e59d9fc06050a3351506621408a943039ff55b4b4de20d"
        },
        "0x96a7ce28124a58eee4f04c2ee97fd44eb93c29d0df55a43fa5e0daccb20a0be5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            }
          ],
          "name": "OrderClaimed",
          "type": "event",
          "signature": "0x96a7ce28124a58eee4f04c2ee97fd44eb93c29d0df55a43fa5e0daccb20a0be5"
        },
        "0x0fc93734e5a973e72ab53332bf6e822d652e9d044fa7f4fe3b13028352c14880": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            }
          ],
          "name": "OrderRefunded",
          "type": "event",
          "signature": "0x0fc93734e5a973e72ab53332bf6e822d652e9d044fa7f4fe3b13028352c14880"
        }
      },
      "links": {},
      "address": "0x06dedDf1BAE98256a3CD5e8434022E1863E6cfD6",
      "transactionHash": "0x337fc4773625babd462ff160d363c11e5fd33ad3bb951c603d93a2973a4a7e54"
    },
    "42": {
      "events": {
        "0x1fc3404b2b61946be5891f39322172e289ee6947959fd6ace7e6f754ac30b1c7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "indexed": false,
              "name": "onchainAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "paymentHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "refundBlockHeight",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "tokenContractAddress",
              "type": "address"
            }
          ],
          "name": "OrderErc20FundingReceived",
          "type": "event",
          "signature": "0x1fc3404b2b61946be5891f39322172e289ee6947959fd6ace7e6f754ac30b1c7"
        },
        "0x4be7082001f60f2505b01150c05e41746eebdc14140ea85873ab800288d3fedd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            }
          ],
          "name": "OrderErc20Claimed",
          "type": "event",
          "signature": "0x4be7082001f60f2505b01150c05e41746eebdc14140ea85873ab800288d3fedd"
        },
        "0xcfcf29fab214c4c5d494671a1fefb8a5efa9359fe62863910138b7f2881de63d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            }
          ],
          "name": "OrderErc20Refunded",
          "type": "event",
          "signature": "0xcfcf29fab214c4c5d494671a1fefb8a5efa9359fe62863910138b7f2881de63d"
        },
        "0x89abd53b328271c678e59d9fc06050a3351506621408a943039ff55b4b4de20d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            },
            {
              "indexed": false,
              "name": "onchainAmount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "paymentHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "name": "refundBlockHeight",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "tokenContractAddress",
              "type": "address"
            }
          ],
          "name": "OrderFundingReceived",
          "type": "event",
          "signature": "0x89abd53b328271c678e59d9fc06050a3351506621408a943039ff55b4b4de20d"
        },
        "0x96a7ce28124a58eee4f04c2ee97fd44eb93c29d0df55a43fa5e0daccb20a0be5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            }
          ],
          "name": "OrderClaimed",
          "type": "event",
          "signature": "0x96a7ce28124a58eee4f04c2ee97fd44eb93c29d0df55a43fa5e0daccb20a0be5"
        },
        "0x0fc93734e5a973e72ab53332bf6e822d652e9d044fa7f4fe3b13028352c14880": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "orderUUID",
              "type": "bytes16"
            }
          ],
          "name": "OrderRefunded",
          "type": "event",
          "signature": "0x0fc93734e5a973e72ab53332bf6e822d652e9d044fa7f4fe3b13028352c14880"
        }
      },
      "links": {},
      "address": "0x99ae80f430462f05F7CcaB5468942D33E4FE12db",
      "transactionHash": "0xc3dd6df90167d583fc2980556759a3dee5cf0e2f32959ec0f3d190f3c56ddb32"
    }
  },
  "schemaVersion": "3.0.20",
  "userdoc": {
    "methods": {
      "adminRefund((bytes16,bytes32))": {
        "notice": "Refund the sent token amount back to the funder if a valid refund preimage is supplied. This provides a better UX than a timelocked refund. It is entirely at the discretion of the entity on the opposite side of the swap as to whether the refund preimage will be provided to the funder, but is recommended once it's decided that a claim transaction will not be submitted."
      },
      "batchAdminRefund((bytes16,bytes32)[])": {
        "notice": "Refund the sent token amounts back to the funder if a valid refund preimage is supplied. This provides a better UX than a timelocked refund. It is entirely at the discretion of the entity on the opposite side of the swap as to whether the refund preimage will be provided to the funder, but is recommended once it's decided that a claim transaction will not be submitted."
      },
      "batchClaim((bytes16,bytes32)[])": {
        "notice": "Allow the recipient to claim the funds for multiple swaps once they know the preimage of the hashlock. Anyone can claim, but the tokens will always be sent to the owner."
      },
      "batchFund((bytes16,bytes32,address,uint256)[])": {
        "notice": "Allow the sender to fund multiple swaps in one or more transactions."
      },
      "batchFundWithRefundHashlock((bytes16,bytes32,bytes32,address,uint256)[])": {
        "notice": "Allow the sender to fund multiple swaps in one or more transactions and provide a refund hashes, which can enable faster refunds if the refund preimage is supplied."
      },
      "batchRefund(bytes16[])": {
        "notice": "Refund the sent token amounts back to the funders if the timelocks have expired."
      },
      "claim((bytes16,bytes32))": {
        "notice": "Allow the recipient to claim the funds once they know the preimage of the hashlock. Anyone can claim, but the tokens will always be sent to the owner."
      },
      "fund((bytes16,bytes32,address,uint256))": {
        "notice": "Allow the sender to fund a swap in one or more transactions."
      },
      "fundWithRefundHashlock((bytes16,bytes32,bytes32,address,uint256))": {
        "notice": "Allow the sender to fund a swap in one or more transactions and provide a refund hash, which can enable faster refunds if the refund preimage is supplied."
      },
      "refund(bytes16)": {
        "notice": "Refund the sent token amount back to the funder if the timelock has expired."
      },
      "setRefundDelay(uint256)": {
        "notice": "Set the block height at which a refund will successfully process."
      },
      "transferOwnership(address)": {
        "notice": "Allow the owner of this contract to transfer ownership to another address"
      }
    }
  }
}
